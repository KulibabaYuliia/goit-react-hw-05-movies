{"version":3,"file":"static/js/983.a12d246d.chunk.js","mappings":"kTAEMA,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACaC,EAAAA,EAAAA,IAAA,iFAC0DF,IAFvE,cACCG,EADD,yBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACaH,EAAAA,EAAAA,IAAA,6CACsBG,EADtB,mCACwDL,IAFrE,cACCG,EADD,yBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACaL,EAAAA,EAAAA,IAAA,0DACmCK,EADnC,mCACuEP,IAFpF,cACCG,EADD,yBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,uFACaH,EAAAA,EAAAA,IAAA,6CACsBG,EADtB,2CACgEL,IAF7E,cACCG,EADD,yBAIEA,GAJF,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCJ,GAAjC,uFACaH,EAAAA,EAAAA,IAAA,6CACsBG,EADtB,2CACgEL,EADhE,YADb,cACCG,EADD,yBAIEA,GAJF,kE,4FC7BMO,G,QAAsB,SAAAC,GAAK,OACtCC,EAAAA,GAAAA,MAAA,UAAeD,GAAS,CACtBE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SAT6B,GAY3BC,EAAmB,kBAC9BV,EAAAA,GAAAA,KAAA,4BAAwC,CACtCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SATqB,C,wDCIhC,IAhBmB,SAAC,GAAwB,IAAtBE,EAAqB,EAArBA,eACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,GACCA,EAAeG,KAAI,SAAAC,GAAK,OACtB,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAML,GAAYM,GAAE,kBAAaH,EAAMI,IAAtD,SACGJ,EAAMK,SAFFL,EAAMI,GADO,KAS/B,C,4IC6BD,UAvCa,WACX,OAA4CE,EAAAA,EAAAA,UAAS,MAArD,eAAOV,EAAP,KAAuBW,EAAvB,KACA,GAA8BD,EAAAA,EAAAA,UAAS,MAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,sGAErBF,GAAW,GAFU,UAGEnC,EAAAA,EAAAA,MAHF,mBAKO,KAFpBsC,EAHa,EAGbA,MAECC,QAAQC,OALI,sBAMb,IAAIC,MAAM,oBANG,OASrBR,EAAkBK,EAAKC,SATF,kDAWrBN,EAAkB,OAClBxB,EAAAA,EAAAA,GAAoB,KAAMiC,SAZL,yBAcrBP,GAAW,GAdU,6EAAH,qDAkBtBE,GACD,GAAE,KAGD,4BACE,wBAAI,oBAEJ,SAAC,IAAD,CAAmBf,eAAgBA,IAElCY,IAAW,SAAC,IAAD,KAEZ,SAAC,KAAD,MAGL,C","sources":["components/Api/Api.jsx","components/Error/Error.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'f254cc864df015fcbf82561d518eee0b';\n\nexport async function fetchTrendingMovies() {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=${KEY}`\n  );\n  return res;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US&api_key=${KEY}`\n  );\n  return res;\n}\n\nexport async function fetchSearchedMovies(movieName) {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${movieName}&language=en-US&api_key=${KEY}`\n  );\n  return res;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US&api_key=${KEY}`\n  );\n  return res;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&api_key=${KEY}&page=1`\n  );\n  return res;\n}\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const notifyNoResultFound = error =>\n  toast.error(`${error}`, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  });\n\nexport const notifyEmtySearch = () =>\n  toast.warn(`Search shouldn't be empty`, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  });\n","// import { StyledGallery } from './TrendingFilmsList.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ trendingMovies }) => {\n  const location = useLocation();\n  return (\n    <ol>\n      {trendingMovies &&\n        trendingMovies.map(movie => (\n          <li key={movie.id}>\n            <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n    </ol>\n  );\n};\n\nexport default MoviesList;\n","import React, { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'components/Api/Api';\nimport { Loader } from 'components/Loader/Loader';\nimport { ToastContainer } from 'react-toastify';\nimport { notifyNoResultFound } from 'components/Error/Error';\nimport TrendingFilmsList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState(null);\n  const [loading, setLoading] = useState(null);\n\n  useEffect(() => {\n    const fetchTodayMovies = async () => {\n      try {\n        setLoading(true);\n        const { data } = await fetchTrendingMovies();\n\n        if (data.results.length === 0) {\n          throw new Error('No results found');\n        }\n\n        setTrendingMovies(data.results);\n      } catch (error) {\n        setTrendingMovies(null);\n        notifyNoResultFound(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTodayMovies();\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending today</h2>\n\n      <TrendingFilmsList trendingMovies={trendingMovies} />\n\n      {loading && <Loader />}\n\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["KEY","fetchTrendingMovies","axios","res","fetchMovieDetails","movieId","fetchSearchedMovies","movieName","fetchMovieCast","fetchMovieReviews","notifyNoResultFound","error","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","notifyEmtySearch","trendingMovies","location","useLocation","map","movie","state","from","to","id","title","useState","setTrendingMovies","loading","setLoading","useEffect","fetchTodayMovies","data","results","length","Error","message"],"sourceRoot":""}