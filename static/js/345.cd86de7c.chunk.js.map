{"version":3,"file":"static/js/345.cd86de7c.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","components/Error/Error.jsx","components/MoviesList/MoviesList.jsx","components/icons/search.svg","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'f254cc864df015fcbf82561d518eee0b';\n\nexport async function fetchTrendingMovies() {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=${KEY}`\n  );\n  return res;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US&api_key=${KEY}`\n  );\n  return res;\n}\n\nexport async function fetchSearchedMovies(movieName) {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${movieName}&language=en-US&api_key=${KEY}`\n  );\n  return res;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US&api_key=${KEY}`\n  );\n  return res;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const res = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&api_key=${KEY}&page=1`\n  );\n  return res;\n}\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const notifyNoResultFound = error =>\n  toast.error(`${error}`, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  });\n\nexport const notifyEmtySearch = () =>\n  toast.warn(`Search shouldn't be empty`, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  });\n","// import { StyledGallery } from './TrendingFilmsList.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ trendingMovies }) => {\n  const location = useLocation();\n  return (\n    <ol>\n      {trendingMovies &&\n        trendingMovies.map(movie => (\n          <li key={movie.id}>\n            <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n    </ol>\n  );\n};\n\nexport default MoviesList;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    id: \"Outline\",\n    viewBox: \"0 0 24 24\",\n    width: 512,\n    height: 512,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.707,22.293l-5.969-5.969a10.016,10.016,0,1,0-1.414,1.414l5.969,5.969a1,1,0,0,0,1.414-1.414ZM10,18a8,8,0,1,1,8-8A8.009,8.009,0,0,1,10,18Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.83bf22fea51e5d789840c7ebeff532fe.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\nimport backgroundImage from '../icons/search.svg';\nimport { Form, Field } from 'formik';\n\nexport const StyledHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const StyledSearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const StyledFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url(${backgroundImage});\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  span {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n`;\n\nexport const StyledFormInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import {\n  StyledHeader,\n  StyledSearchForm,\n  StyledFormButton,\n  StyledFormInput,\n} from './Searchbar.styled';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { notifyEmtySearch } from 'components/Error/Error';\nimport { useSearchParams } from 'react-router-dom';\n\nlet userSchema = yup.object().shape({\n  query: yup.string(),\n});\n\nexport const Searchbar = () => {\n  const [, setSearchParams] = useSearchParams();\n\n  const submitHandler = (values, action) => {\n    if (values.query.trim() === '') {\n      notifyEmtySearch();\n      return;\n    }\n\n    setSearchParams({ query: values.query });\n    action.resetForm();\n  };\n\n  return (\n    <StyledHeader>\n      <Formik\n        initialValues={{ query: '' }}\n        validationSchema={userSchema}\n        onSubmit={submitHandler}\n      >\n        <StyledSearchForm>\n          <StyledFormButton type=\"submit\">\n            <span>Search</span>\n          </StyledFormButton>\n\n          <StyledFormInput\n            name=\"query\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n          <ErrorMessage name=\"query\" component=\"div\" />\n        </StyledSearchForm>\n      </Formik>\n    </StyledHeader>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchSearchedMovies } from 'components/Api/Api';\nimport { Loader } from 'components/Loader/Loader';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { ToastContainer } from 'react-toastify';\nimport { notifyNoResultFound } from 'components/Error/Error';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchedMoviesList from 'components/MoviesList/MoviesList';\n\nconst MoviesPage = () => {\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const fetchMoviesByName = async () => {\n      try {\n        if (!query) {\n          return;\n        }\n        setLoading(true);\n        const { data } = await fetchSearchedMovies(query);\n\n        if (data.results.length === 0) {\n          throw new Error('No results found');\n        }\n\n        console.log(data.results);\n        setSearchedMovies(data.results);\n      } catch (error) {\n        setSearchedMovies(null);\n        notifyNoResultFound(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMoviesByName();\n  }, [query]);\n\n  return (\n    <div>\n      <Searchbar searchedMovies={searchedMovies} />\n      <SearchedMoviesList trendingMovies={searchedMovies} />\n      {loading && <Loader />}\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["KEY","fetchTrendingMovies","axios","res","fetchMovieDetails","movieId","fetchSearchedMovies","movieName","fetchMovieCast","fetchMovieReviews","notifyNoResultFound","error","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","notifyEmtySearch","trendingMovies","location","useLocation","map","movie","state","from","to","id","title","StyledHeader","styled","StyledSearchForm","Form","StyledFormButton","backgroundImage","StyledFormInput","Field","userSchema","yup","shape","query","Searchbar","useSearchParams","setSearchParams","initialValues","validationSchema","onSubmit","values","action","trim","resetForm","type","name","autoComplete","autoFocus","placeholder","component","useState","searchedMovies","setSearchedMovies","loading","setLoading","get","useEffect","fetchMoviesByName","data","results","length","Error","console","log","message","Loader"],"sourceRoot":""}