{"version":3,"file":"static/js/387.b901f02f.chunk.js","mappings":"0RAEaA,E,QAAcC,EAAAA,GAAH,kK,SCgDxB,EA3CgB,WACd,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,MAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,sGAEhBJ,GAAW,GAFK,UAGOK,EAAAA,EAAAA,IAAkBJ,GAHzB,gBAGRK,EAHQ,EAGRA,KAERR,EAAgBQ,EAAKC,SALL,gDAOhBT,EAAgB,OAChBU,EAAAA,EAAAA,GAAoB,KAAMC,SARV,yBAUhBT,GAAW,GAVK,4EAAH,qDAcjBI,GACD,GAAE,CAACH,KAGF,iCACIF,GAAWF,GAAwC,IAAxBA,EAAaa,SACxC,SAAChB,EAAD,UACGG,EAAac,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OAChB,2BACE,0BAAI,WAASF,MACb,uBAAIC,MAFGC,EADO,OASpBf,GAAoC,KAAb,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAca,UAAgB,yBAAK,mBAE/CX,IAAW,SAACgB,EAAA,EAAD,MAGjB,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n\n  li {\n    max-width: 700px;\n  }\n\n  h3 {\n    margin-bottom: 10px;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'components/Api/Api';\nimport { notifyNoResultFound } from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\nimport { ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchRevies = async () => {\n      try {\n        setLoading(true);\n        const { data } = await fetchMovieReviews(movieId);\n\n        setMovieReviews(data.results);\n      } catch (error) {\n        setMovieReviews(null);\n        notifyNoResultFound(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRevies();\n  }, [movieId]);\n\n  return (\n    <>\n      {!loading && movieReviews && movieReviews.length !== 0 && (\n        <ReviewsList>\n          {movieReviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ReviewsList>\n      )}\n\n      {!loading && movieReviews?.length === 0 && <div>No reviews yet</div>}\n\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewsList","styled","useState","movieReviews","setMovieReviews","loading","setLoading","movieId","useParams","useEffect","fetchRevies","fetchMovieReviews","data","results","notifyNoResultFound","message","length","map","author","content","id","Loader"],"sourceRoot":""}