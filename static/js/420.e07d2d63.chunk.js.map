{"version":3,"file":"static/js/420.e07d2d63.chunk.js","mappings":"0QAEaA,EAAWC,EAAAA,EAAAA,GAAH,4EAMRC,EAAWD,EAAAA,EAAAA,IAAH,iE,qCC8CrB,EA5Ca,WACX,OAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,MAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdJ,GAAW,GAFG,UAGSK,EAAAA,EAAAA,IAAeJ,GAHxB,gBAGNK,EAHM,EAGNA,KAERR,EAAaQ,EAAKC,MALJ,gDAOdT,EAAa,OACbU,EAAAA,EAAAA,GAAoB,KAAMC,SARZ,yBAUdT,GAAW,GAVG,4EAAH,qDAcfI,GACD,GAAE,CAACH,KAGF,iCACE,SAACR,EAAD,UACGI,GACCA,EAAUa,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAvB,OACZ,2BACE,SAAClB,EAAD,CACEmB,IAAKH,EAhCH,kCAgC8BA,E,ioFAChCI,IAAKH,EACLI,MAAM,SAER,uBAAIJ,KACJ,uBAAIC,MAPGD,EADG,MAYjBb,IAAW,SAACkB,EAAA,EAAD,MAGjB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const Portrait = styled.img`\n  height: 220px;\n  border-radius: 4px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastList, Portrait } from './Cast.styled';\nimport defaultPoster from 'components/icons/defaultPortrait.png';\nimport { fetchMovieCast } from 'components/Api/Api';\nimport { notifyNoResultFound } from 'components/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const { data } = await fetchMovieCast(movieId);\n\n        setMovieCast(data.cast);\n      } catch (error) {\n        setMovieCast(null);\n        notifyNoResultFound(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      <CastList>\n        {movieCast &&\n          movieCast.map(({ profile_path, name, character }) => (\n            <li key={name}>\n              <Portrait\n                src={profile_path ? IMAGE_URL + profile_path : defaultPoster}\n                alt={name}\n                width=\"150\"\n              />\n              <p>{name}</p>\n              <p>{character}</p>\n            </li>\n          ))}\n      </CastList>\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["CastList","styled","Portrait","useState","movieCast","setMovieCast","loading","setLoading","movieId","useParams","useEffect","fetchCast","fetchMovieCast","data","cast","notifyNoResultFound","message","map","profile_path","name","character","src","alt","width","Loader"],"sourceRoot":""}